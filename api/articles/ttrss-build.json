{"title":"自建RSS服务——Tiny Tiny RSS","uid":"e8150b3212a072c98bc817c2af2c678b","slug":"ttrss-build","date":"2020-04-23T13:16:19.000Z","updated":"2022-08-18T03:14:09.983Z","comments":true,"path":"api/articles/ttrss-build.json","keywords":null,"cover":[],"content":"<p><strong>这篇文章使用的是TTRSS老版本安装方式，新版的Docker安装请参考最新的文章<a href=\"/2021/07/22/ttrss-build-2/\">Tiny Tiny\nRSS再次搭建</a>。</strong></p>\n<p>很早之前就有了自建RSS服务的想法，但是Feedly和Inoreader的基(mian)础(fei)套餐真的太香了，懒人表示无法拒绝。结果，不出所料，Feedly和Inoreader在4月初的时候陆续被墙，当时还以为Reeder\n3停更了。<br>\n为了解决日常的RSS阅读，自建RSS服务就提上了日程<del>从冒出想法到搞定实际只花了半天时间</del>。</p>\n<p>本文我就来详细介绍一下搭建多平台RSS服务——Tiny Tiny RSS(TTRSS)。</p>\n<span id=\"more\"></span>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>最新版的TTRSS更新了安装方式，目前官方推荐使用docker方式安装，具体的安装和迁移请等待相关文章的更新。</strong></p></blockquote>\n<h2 id=\"ttrss\">1 TTRSS</h2>\n<p>冒出自建RSS服务之前，我其实已经删掉Reeder准备放弃移动端了。网上推荐的Win平台RSS阅读器，发现大多都是Outlook、ThunderMail之类的邮件客户端；虽然我也用\"宇宙最强的邮件客户端\"——Outlook，但我并不想把娱乐消遣和工作搅和在一起。<br>\n在小众软件的一篇文章的评论里面，我发现了Tiny Tiny\nRSS(TTRSS)，一下子就发现它非常符合我的情况： 1. 国内有闲置的服务器可用；\n2. 订阅源偏重国内(国外源较多建议使用国外的服务器)； 3.\n时间较多的白嫖党。</p>\n<p>说干就干。花了一下午把TTRSS给搞定了，并已经成功在Reeder上登录、阅读、标记。</p>\n<h2 id=\"服务器配置\">2 服务器配置</h2>\n<p>闲置的服务器是在两年前买的腾讯云\"1C+2G+1Mbps\"，无域名，一直没有利用起来。</p>\n<p>首先，在腾讯云控制台重装系统，这是清空系统防止出现程序冲突。如果服务器已经运行其它任务，可以无视，但出现问题需要考虑会不会是已运行任务的冲突。因为比较偏爱CentOS，所以操作系统选择了CentOS。</p>\n<figure>\n<img src=\"/post/ttrss-build.htm/3506696871.png\" alt=\"服务器系统重装\">\n<figcaption aria-hidden=\"true\">服务器系统重装</figcaption>\n</figure>\n<p>重装完服务器的系统先不要关掉控制台，在左侧找到\"安全组\"，新建一个安全组规则。<br>\n我开通了3个端口： 1. 8888 --&gt; 宝塔面板默认端口； 2. 2333 --&gt;\n预留给宝塔面板的端口； 3. 9999 --&gt; 预留给TTRSS的端口。<br>\n注：宝塔面板和TTRSS的端口可以选自己喜欢的，只要不和现有的冲突就行。</p>\n<p>新建安全组规则后，将这个规则绑定到服务器。</p>\n<figure>\n<img src=\"/post/ttrss-build.htm/2662962289.png\" alt=\"配置安全组\">\n<figcaption aria-hidden=\"true\">配置安全组</figcaption>\n</figure>\n<h2 id=\"服务器环境安装\">3 服务器环境安装</h2>\n<h3 id=\"宝塔面板安装\">3.1 宝塔面板安装</h3>\n<p>云服务器的配置结束后，就可以使用SSH工具登录服务器了(别告诉我你把密码给忘记了)。<br>\nSSH工具(如XShell)使用教程自行百度(喜欢谷歌的可以选择番羽土啬)。</p>\n<p>使用SSH登录服务器后，根据系统使用下面的命令安装宝塔面板，其它操作系统的安装命令请到<a href=\"https://www.bt.cn/download/linux.html\">宝塔面板官网</a>查看。<br>\n使用宝塔面板的目的是为了安装LNMP并为TTRSS建立站点，已经安装过或者对此精通的大佬请自觉跳至<a href=\"#ttrss%e7%ab%99%e7%82%b9%e5%bb%ba%e7%ab%8b\">TTRSS站点建立</a>。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># CentOS 安装命令\nyum install -y wget &amp;&amp; wget -O install.sh http:&#x2F;&#x2F;download.bt.cn&#x2F;install&#x2F;install_6.0.sh &amp;&amp; sh install.sh\n# Ubuntu&#x2F;Deepin 安装命令\nwget -O install.sh http:&#x2F;&#x2F;download.bt.cn&#x2F;install&#x2F;install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh</code></pre>\n<p>安装过程不是特别慢，大概几分钟就搞定了。宝塔面板安装成功后会在最后有\"Completed\"字样，并在字样上方有访问宝塔面板的默认URL及账号密码，请务必将这几行字符复制出来并暂时保存起来。这里的图片没有截，请仔细阅读这段文字。</p>\n<h3 id=\"lnmp安装\">3.2 LNMP安装</h3>\n<p>使用宝塔面板安装后输出的URL和账号密码登录宝塔面板，然后在弹出的框内选择LNMP进行安装。<br>\n如果你看到这篇文章的时候PHP没有更新8.0的话，PHP版本选择最新的；服务器配置如果是1核1G，MySQL版本请自觉选用5.6及以下；phpMyAdmin可以不选。我安装时没有截图，这张图是官方论坛里截取的，使用图里的版本也可以。</p>\n<figure>\n<img src=\"/post/ttrss-build.htm/2780109685.png\" alt=\"安装LNMP\">\n<figcaption aria-hidden=\"true\">安装LNMP</figcaption>\n</figure>\n<p>安装过程看具体服务器配置，我的2G内存的跑了十分钟左右。等任务队列全部跑完就说明环境安装好了。</p>\n<p>接下来需要安装PHP的扩展fileinfo，否则TTRSS的初始化会出错。几年前我搭建我的WordPress的时候就因为没安装fileinfo，一直初始化失败。<br>\n在左侧边栏中选择\"软件商店\"，选择分类\"已安装\"，点击PHP的\"设置\"。</p>\n<figure>\n<img src=\"/post/ttrss-build.htm/1674883902.png\" alt=\"安装fileinfo插件-1\">\n<figcaption aria-hidden=\"true\">安装fileinfo插件-1</figcaption>\n</figure>\n<p>在弹出的界面中选择左侧的\"安装扩展\"，找到fileinfo并点击安装，安装需要等待几秒钟。</p>\n<figure>\n<img src=\"/post/ttrss-build.htm/3460819832.png\" alt=\"安装fileinfo插件-2\">\n<figcaption aria-hidden=\"true\">安装fileinfo插件-2</figcaption>\n</figure>\n<p>到这里，LNMP的环境就搭建好了，但我还是要多说一句，<strong>请务必在左侧边栏的\"面板设置\"中修改面板登录端口、账号密码以及安全入口</strong>，端口使用安全组预留给宝塔面板的端口。</p>\n<h3 id=\"ttrss站点建立\">3.3 TTRSS站点建立</h3>\n<p>在左侧边栏中选择\"网站\"，点击\"添加站点\"。</p>\n<figure>\n<img src=\"/post/ttrss-build.htm/2348240304.png\" alt=\"建立站点\">\n<figcaption aria-hidden=\"true\">建立站点</figcaption>\n</figure>\n<p>在弹出的界面中填写站点的信息。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>填写要求：<br>\n域名 -\n使用\"http://服务器外网ip:端口号\"的格式，端口号使用安全组预留给TTRSS使用的端口；可以使用域名代替外网ip，甚至使用https<br>\n根目录 - 为了方便，我使用了\"/www/wwwroot/ttrss\"<br>\n数据库 - 选择\"MySQL\"，编码为\"utf-8\"，用户名与密码自己输入并记住</p></blockquote>\n<h2 id=\"ttrss安装及配置\">4 TTRSS安装及配置</h2>\n<p>此时服务器上的站点还是空的网站，需要从<a href=\"https://tt-rss.org/\">TTRSS官网</a>下载TTRSS并进行配置。</p>\n<h3 id=\"ttrss下载\">4.1 TTRSS下载</h3>\n<p>虽然使用服务器也可以获取TTRSS，但下载速度太感人，还是在PC上下好了传上去吧。不信邪的可以使用下面的命令。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">git clone https:&#x2F;&#x2F;git.tt-rss.org&#x2F;fox&#x2F;tt-rss.git ttrss</code></pre>\n<p>建议大家使用浏览器访问TTRSS的<a href=\"https://git.tt-rss.org/git/tt-rss/src/master\">仓库</a>，下载zip包。如果这个仓库失效可以访问<a href=\"https://tt-rss.org/\">TTRSS官网</a>，再进入仓库下载。</p>\n<p>成功下载TTRSS后，使用宝塔面板将zip包上传到服务器的/www/wwwroot/目录下；<br>\n解压这个zip包，将tt-rss文件夹内的所有文件剪切到/www/wwwroot/ttrss/目录下。<br>\n小文件上传速度堪忧，请务必在服务器解压zip包。</p>\n<figure>\n<img src=\"/post/ttrss-build.htm/2606487638.png\" alt=\"上传TTRSS\">\n<figcaption aria-hidden=\"true\">上传TTRSS</figcaption>\n</figure>\n<h3 id=\"ttrss初始化\">4.2 TTRSS初始化</h3>\n<p>打开浏览器，访问\"http://服务器外网ip:端口号/install\"，进入TTRSS的初始化。<br>\n数据库选择MySQL，端口选择3306，用户名密码是建立站点时设置的，希望没有忘记。然后点击\"Test\nconfiguration\"。</p>\n<figure>\n<img src=\"/post/ttrss-build.htm/301425375.png\" alt=\"TTRSS初始化-1\">\n<figcaption aria-hidden=\"true\">TTRSS初始化-1</figcaption>\n</figure>\n<p>网页下方出现下图的内容，点击\"Initialize database\"。</p>\n<figure>\n<img src=\"/post/ttrss-build.htm/3081491383.png\" alt=\"TTRSS初始化-2\">\n<figcaption aria-hidden=\"true\">TTRSS初始化-2</figcaption>\n</figure>\n<p>接着，在出现的内容中点击\"Save\nconfiguration\"，让系统自己保存配置。</p>\n<figure>\n<img src=\"/post/ttrss-build.htm/3023230390.png\" alt=\"TTRSS初始化-3\">\n<figcaption aria-hidden=\"true\">TTRSS初始化-3</figcaption>\n</figure>\n<p>到此，TTRSS就配置结束了，访问\"http://服务器外网ip:端口号\"即可登录TTRSS了。<br>\n使用默认用户名及密码(admin,password)即可登录TTRSS，第一次登录时系统会提示重设密码。</p>\n<h3 id=\"ttrss配置自动更新\">4.3 TTRSS配置——自动更新</h3>\n<p>可能是因为bug的原因，目前的TTRSS通过\"偏好设置\"无法自动更新，需要使用服务器的非root用户的crontab进行自动更新。配置过程如下。</p>\n<p>使用SSH登录服务器，输入下面这个命令。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">crontab -u www -e</code></pre>\n<p>然后，点击\"i\"进入编辑模式，插入以下命令实现1小时更新一下信息源。请注意php后的路径和命令中的空格。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">* *&#x2F;1 * * * php &#x2F;www&#x2F;wwwroot&#x2F;ttrss&#x2F;update.php  --feeds  &gt; &#x2F;dev&#x2F;null</code></pre>\n<p>最后，使用\"Esc\"和\":wq\"退出vim编辑，TTRSS就可以自动更新了。</p>\n<p>至于订阅源的配置步骤就不赘述了。</p>\n<h3 id=\"ttrss配置多平台支持fever\">4.4 TTRSS配置——多平台支持/fever</h3>\n<p>目前大部分RSS的客户端可以使用fever和GoogleAPI登录，但遗憾的是TTRSS不原生支持fever\nAPI。因此，需要配置fever插件。</p>\n<ol type=\"1\">\n<li>下载<a href=\"./3738853280.7z\">fever插件</a>并解压，使用宝塔面板将<strong>整个fever文件夹</strong>上传到/www/wwwroot/ttrss/plugins/目录下。注意：<strong>整个fever文件夹</strong>。</li>\n<li>在TTRSS的偏好设置中，勾选\"允许外部客户端通过API来访问该账户\"。</li>\n<li>在TTRSS的偏好设置中，选择\"插件\"页面，勾选fever，点击\"启用选择的插件\"。</li>\n<li>刷新页面，在TTRSS的偏好设置中，选择\"Fever\nEmulation\"页面，设置密码。密码可与TTRSS账户密码相同，用于客户端访问TTRSS。</li>\n</ol>\n<p>下面就可以在客户端使用Fever访问TTRSS了。下面是Reeder 3的配置页面。\n服务器填写\"http://服务器外网ip:端口号/plugins/fever\"；邮箱填写TTRSS账号用户名，不一定要邮箱；密码是在\"Fever\nEmulation\"页面设置的密码。</p>\n<figure>\n<img src=\"/post/ttrss-build.htm/3057100732.png#vhei=800\" alt=\"Reeder 3配置界面\">\n<figcaption aria-hidden=\"true\">Reeder 3配置界面</figcaption>\n</figure>\n<h2 id=\"总结\">总结</h2>\n<p>整篇文章写下来花了两天时间，有几张图片因为搭建时遗忘而没有截图，但整个搭建描述还是挺清晰的(自我评价的)。</p>\n<p>如果参考了这篇TTRSS搭建教程，请别忘了<del>一键三连</del>收藏分享哦。</p>\n","text":"这篇文章使用的是TTRSS老版本安装方式，新版的Docker安装请参考最新的文章Tiny Tiny RSS再次搭建。 很早之前就有了自建RSS服务的想法，但是F...","link":"","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"DIY","slug":"DIY","count":2,"path":"api/categories/DIY.json"}],"tags":[{"name":"DIY","slug":"DIY","count":5,"path":"api/tags/DIY.json"},{"name":"RSS","slug":"RSS","count":2,"path":"api/tags/RSS.json"},{"name":"服务器","slug":"服务器","count":2,"path":"api/tags/服务器.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ttrss\"><span class=\"toc-text\">1 TTRSS</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">2 服务器配置</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">3 服务器环境安装</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">3.1 宝塔面板安装</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#lnmp%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">3.2 LNMP安装</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ttrss%E7%AB%99%E7%82%B9%E5%BB%BA%E7%AB%8B\"><span class=\"toc-text\">3.3 TTRSS站点建立</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ttrss%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">4 TTRSS安装及配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ttrss%E4%B8%8B%E8%BD%BD\"><span class=\"toc-text\">4.1 TTRSS下载</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ttrss%E5%88%9D%E5%A7%8B%E5%8C%96\"><span class=\"toc-text\">4.2 TTRSS初始化</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ttrss%E9%85%8D%E7%BD%AE%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0\"><span class=\"toc-text\">4.3 TTRSS配置——自动更新</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ttrss%E9%85%8D%E7%BD%AE%E5%A4%9A%E5%B9%B3%E5%8F%B0%E6%94%AF%E6%8C%81fever\"><span class=\"toc-text\">4.4 TTRSS配置——多平台支持&#x2F;fever</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol>","author":{"name":"Leon","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/17242727?s=60&v=4","link":"/","description":"这里是爱研究各种问题、立许多flag的Leon的网络日志","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"VS Code笔记之可自动更新的Markdown目录","uid":"f3aa1d06b2e94c3c84072b7e7cbed3d8","slug":"vscode-note-tableofcontents","date":"2020-05-05T04:02:54.000Z","updated":"2022-08-18T03:17:45.291Z","comments":true,"path":"api/articles/vscode-note-tableofcontents.json","keywords":null,"cover":[],"text":"Markdown语法支持自己编写目录，但是碰到中文标题就捉襟见肘了。不久前在写项目README的时候，我一时兴起准备给文章编写一个目录，却发现一开始编写的目录竟...","link":"","photos":[],"count_time":{"symbolsCount":586,"symbolsTime":"1 mins."},"categories":[{"name":"软件","slug":"软件","count":4,"path":"api/categories/软件.json"}],"tags":[{"name":"VS Code","slug":"VS-Code","count":2,"path":"api/tags/VS-Code.json"},{"name":"Markdown","slug":"Markdown","count":2,"path":"api/tags/Markdown.json"}],"author":{"name":"Leon","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/17242727?s=60&v=4","link":"/","description":"这里是爱研究各种问题、立许多flag的Leon的网络日志","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"VS Code笔记之根据语言选择性删除行末空格","uid":"3a2b5bb3b1ed564bf315213ac9ebe4e0","slug":"vscode-note-trimTrailingWhitespace","date":"2020-04-08T03:34:40.000Z","updated":"2022-11-22T09:36:18.009Z","comments":true,"path":"api/articles/vscode-note-trimTrailingWhitespace.json","keywords":null,"cover":null,"text":"由于一直没有找到合适的Markdown编辑器，就一直用VS Code来写点东西。从VS Code发布以来就一直在用，到现在已经有了相当丰富的插件可以使用了。平时...","link":"","photos":[],"count_time":{"symbolsCount":806,"symbolsTime":"1 mins."},"categories":[{"name":"软件","slug":"软件","count":4,"path":"api/categories/软件.json"}],"tags":[{"name":"VS Code","slug":"VS-Code","count":2,"path":"api/tags/VS-Code.json"},{"name":"Markdown","slug":"Markdown","count":2,"path":"api/tags/Markdown.json"}],"author":{"name":"Leon","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/17242727?s=60&v=4","link":"/","description":"这里是爱研究各种问题、立许多flag的Leon的网络日志","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}