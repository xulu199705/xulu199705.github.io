{"title":"VS Code笔记之可自动更新的Markdown目录","uid":"f3aa1d06b2e94c3c84072b7e7cbed3d8","slug":"vscode-note-tableofcontents","date":"2020-05-05T04:02:54.000Z","updated":"2022-08-18T03:17:45.291Z","comments":true,"path":"api/articles/vscode-note-tableofcontents.json","keywords":null,"cover":[],"content":"<p>Markdown语法支持自己编写目录，但是碰到中文标题就捉襟见肘了。不久前在写项目README的时候，我一时兴起准备给文章编写一个目录，却发现一开始编写的目录竟然可以自动更新。照着目录的格式摸索了几次，终于总结出快速编写目录的方法。</p>\n<span id=\"more\"></span>\n<p>可自动更新目录需要在VS Code中安装插件<a href=\"https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one\">Markdown\nAll in One</a>。</p>\n<p>以本文为例，编写可自动更新的目录的步骤如下：</p>\n<h2 id=\"步骤1\">步骤1</h2>\n<p>创建Markdown文件后，先输入一个标题。如：<br>\n<code># VS Code笔记之快速插入Markdown目录</code></p>\n<h2 id=\"步骤2\">步骤2</h2>\n<p>在需要创建目录的地方输入<code>- [](#</code><del>注意空格和英文半角括号</del>，这时会有自动补全列表弹出，选择\"VS\nCode笔记之快速插入Markdown目录\"的标题，如图1。</p>\n<figure>\n<img src=\"/post/vscode-note-tableofcontents.htm/3134778940.png\" alt=\"图1\">\n<figcaption aria-hidden=\"true\">图1</figcaption>\n</figure>\n<p>选择标题后，目录的最上方会有灰色的小字<code>Table of Contents (up to date)</code>，效果如图2所示。</p>\n<figure>\n<img src=\"/post/vscode-note-tableofcontents.htm/4154552605.png#vwid=649&amp;vhei=127\" alt=\"图2\">\n<figcaption aria-hidden=\"true\">图2</figcaption>\n</figure>\n<p>此时，插件就已经把这一块列表识别为文章的目录了。对于已经创建的Markdown文档，在步骤2输入列表时，有时需要输入两级标题才可以被插件识别为目录。</p>\n<h2 id=\"步骤3\">步骤3</h2>\n<p>保存文件，插件会自动补全连接的内容，见图3所示。之后，插件就会在保存文件时自动获取文章的各级标题，并添加到目录列表中。</p>\n<figure>\n<img src=\"/post/vscode-note-tableofcontents.htm/362785527.png#vwid=646&amp;vhei=120\" alt=\"图3\">\n<figcaption aria-hidden=\"true\">图3</figcaption>\n</figure>\n<hr>\n<p>如果这篇可自动更新的Markdown目录编写指南对你有帮助，请别忘了<del>一键三连</del>收藏分享哦。</p>\n","text":"Markdown语法支持自己编写目录，但是碰到中文标题就捉襟见肘了。不久前在写项目README的时候，我一时兴起准备给文章编写一个目录，却发现一开始编写的目录竟...","link":"","photos":[],"count_time":{"symbolsCount":586,"symbolsTime":"1 mins."},"categories":[{"name":"软件","slug":"软件","count":4,"path":"api/categories/软件.json"}],"tags":[{"name":"VS Code","slug":"VS-Code","count":2,"path":"api/tags/VS-Code.json"},{"name":"Markdown","slug":"Markdown","count":2,"path":"api/tags/Markdown.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A41\"><span class=\"toc-text\">步骤1</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A42\"><span class=\"toc-text\">步骤2</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A43\"><span class=\"toc-text\">步骤3</span></a></li></ol>","author":{"name":"Leon","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/17242727?s=60&v=4","link":"/","description":"这里是爱研究各种问题、立许多flag的Leon的网络日志","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"斯普林格Springer免费书籍","uid":"574f06cad9be6e2313092676c908ea8b","slug":"springer-free-books-2020","date":"2020-06-24T07:22:17.000Z","updated":"2022-08-17T16:55:04.626Z","comments":true,"path":"api/articles/springer-free-books-2020.json","keywords":null,"cover":null,"text":"2020年不知不觉已经过去一半时间了。 :@(汗) 斯普林格，Springer，是欧美非常著名的科技图书出版社。目前全球都被Covid-19笼罩，为了帮助有学习...","link":"","photos":[],"count_time":{"symbolsCount":325,"symbolsTime":"1 mins."},"categories":[{"name":"杂项","slug":"杂项","count":5,"path":"api/categories/杂项.json"}],"tags":[{"name":"资源","slug":"资源","count":1,"path":"api/tags/资源.json"},{"name":"书籍","slug":"书籍","count":1,"path":"api/tags/书籍.json"}],"author":{"name":"Leon","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/17242727?s=60&v=4","link":"/","description":"这里是爱研究各种问题、立许多flag的Leon的网络日志","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"自建RSS服务——Tiny Tiny RSS","uid":"e8150b3212a072c98bc817c2af2c678b","slug":"ttrss-build","date":"2020-04-23T13:16:19.000Z","updated":"2022-08-18T03:14:09.983Z","comments":true,"path":"api/articles/ttrss-build.json","keywords":null,"cover":[],"text":"这篇文章使用的是TTRSS老版本安装方式，新版的Docker安装请参考最新的文章Tiny Tiny RSS再次搭建。 很早之前就有了自建RSS服务的想法，但是F...","link":"","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"DIY","slug":"DIY","count":2,"path":"api/categories/DIY.json"}],"tags":[{"name":"DIY","slug":"DIY","count":5,"path":"api/tags/DIY.json"},{"name":"RSS","slug":"RSS","count":2,"path":"api/tags/RSS.json"},{"name":"服务器","slug":"服务器","count":2,"path":"api/tags/服务器.json"}],"author":{"name":"Leon","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/17242727?s=60&v=4","link":"/","description":"这里是爱研究各种问题、立许多flag的Leon的网络日志","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}