{"title":"STM32基础_GPIO流水灯","uid":"4c8744899e8fd06f078cf01c7e6e9c70","slug":"stm32-gpio-led","date":"2017-07-28T09:22:18.000Z","updated":"2022-11-22T09:36:57.526Z","comments":true,"path":"api/articles/stm32-gpio-led.json","keywords":null,"cover":[],"content":"<p>从一个月前开始学习STM32，对于MCU的理解也更加深入透彻。今天开始就陆续将自己在学习中的经历发布到这里（当然，更新随缘）。</p>\n<span id=\"more\"></span>\n<h2 id=\"流水灯实验原理\">1 流水灯实验原理</h2>\n<p>LED模块的原理图如图1所示：</p>\n<figure>\n<img src=\"/post/stm32-gpio-led.htm/1646673628.png\" alt=\"图1 LED模块原理图\">\n<figcaption aria-hidden=\"true\">图1 LED模块原理图</figcaption>\n</figure>\n<p>从原理图中可以很清楚地看出来，只有把左边引脚设成低电平，LED灯就会被点亮，否则，LED灯处于熄灭状态。\n因此，STM32的作用就是按一定规律把GPIOD的2、3、4、7引脚拉低拉高。</p>\n<h2 id=\"管脚配置\">2 管脚配置</h2>\n<p>STM32的管脚和8051MCU相比，功能更加丰富。STM32的管脚可以设置成不同的功能，成为“分时复用”，具体请移步ST提供的<a href=\"http://www.st.com/content/ccc/resource/technical/document/datasheet/e4/f3/1a/89/5a/02/46/ae/CD00220364.pdf/files/CD00220364.pdf/jcr:content/translations/en.CD00220364.pdf\">DataSheet</a>和<a href=\"http://www.st.com/content/ccc/resource/technical/document/reference_manual/59/b9/ba/7f/11/af/43/d5/CD00171190.pdf/files/CD00171190.pdf/jcr:content/translations/en.CD00171190.pdf\">参考手册</a>。</p>\n<p>同时，不同于51MCU的流水灯程序（以AT89S52为例）：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include \n#include \nvoid delay(unsigned int nCount);\nvoid main(void)&#123;\n    P1 &#x3D; 0xfe;\n    while(1)&#123;\n        P1 &#x3D; _crol_ (P1,1); &#x2F;&#x2F;循环左移函数，在intrins.h中定义\n        delay(5000);\n    &#125;\n&#125;\nvoid delay(unsigned int nCount)&#123;\n    for(; nCount !&#x3D; 0; nCount--);\n&#125;</code></pre>\n<p>将STM32的管脚拉低拉高需要配置STM32管脚的输入输出模式，详见下表：</p>\n<table>\n<thead>\n<tr class=\"header\">\n<th style=\"text-align: center;\">模式名称</th>\n<th style=\"text-align: center;\">标识</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td style=\"text-align: center;\">浮空输入</td>\n<td style=\"text-align: center;\">GPIO_MODE_IN_FLOATING</td>\n</tr>\n<tr class=\"even\">\n<td style=\"text-align: center;\">带上拉输入</td>\n<td style=\"text-align: center;\">GPIO_MODE_IPU</td>\n</tr>\n<tr class=\"odd\">\n<td style=\"text-align: center;\">带下拉输入</td>\n<td style=\"text-align: center;\">GPIO_MODE_IPD</td>\n</tr>\n<tr class=\"even\">\n<td style=\"text-align: center;\">模拟输入</td>\n<td style=\"text-align: center;\">GPIO_MODE_AIN</td>\n</tr>\n<tr class=\"odd\">\n<td style=\"text-align: center;\">开漏输出</td>\n<td style=\"text-align: center;\">GPIO_MODE_OUT_OD</td>\n</tr>\n<tr class=\"even\">\n<td style=\"text-align: center;\">推挽输出</td>\n<td style=\"text-align: center;\">GPIO_MODE_OUT_PP</td>\n</tr>\n<tr class=\"odd\">\n<td style=\"text-align: center;\">复用_推挽输出</td>\n<td style=\"text-align: center;\">GPIO_MODE_AF_PP</td>\n</tr>\n<tr class=\"even\">\n<td style=\"text-align: center;\">复用_开漏输出</td>\n<td style=\"text-align: center;\">GPIO_MODE_AF_OD</td>\n</tr>\n</tbody>\n</table>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>另外，还要提一点，关于STM32的所有外设（包括管脚)的使用流程:\n初始化(Initialization)--&gt;配置(Configuation)--&gt;调用(Call)</p></blockquote>\n<h2 id=\"code\">3 CODE</h2>\n<p>下面就贴一下代码。</p>\n<p>关于STM32项目的建立，可参考STM32F1开发指南-库函数版本_V3.1\n.pdf第三章。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">&#x2F;&#x2F;LED.h\n#ifndef __LED_H\n#define __LED_H\n\n#include &quot;stm32f10x.h&quot;\n\nvoid LED_Init(void);\n\n#endif</code></pre>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">&#x2F;&#x2F;LED.c\n#include &quot;led.h&quot;\n\nvoid LED_Init(void)\n&#123;\n    GPIO_InitTypeDef GPIO_InitStructure;\n\n    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOD, ENABLE);\n    &#x2F;&#x2F;使能对应GPIO的Clock时钟\n\n    GPIO_InitStructure.GPIO_Pin &#x3D; GPIO_Pin_2 | GPIO_Pin_3 |\n    GPIO_Pin_4 | GPIO_Pin_7;\n    &#x2F;&#x2F;设置端口\n\n    GPIO_InitStructure.GPIO_Mode &#x3D; GPIO_Mode_Out_PP;\n    &#x2F;&#x2F;设置端口模式 推挽输出（Push-Pull）\n\n    GPIO_InitStructure.GPIO_Speed &#x3D; GPIO_Speed_50MHz;\n    &#x2F;&#x2F;最大输出速度50MHz\n\n    GPIO_Init(GPIOD, &amp;GPIO_InitStructure);\n    &#x2F;&#x2F;调用GPIO初始化函数\n&#125;</code></pre>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">&#x2F;&#x2F;main.c\n#include &quot;led.h&quot;\n\nvoid delay(uint32_t);\n\nint main(void)\n&#123;\n    LED_Init();\n    while(1)\n    &#123;\n        GPIO_ResetBits(GPIOD, GPIO_Pin_2); &#x2F;&#x2F;将GPIOD的Pin2拉低\n        delay(1600000);\n        GPIO_SetBits(GPIOD, GPIO_Pin_2); &#x2F;&#x2F;将GPIOD的Pin2拉高\n        delay(1600000);\n\n        GPIO_ResetBits(GPIOD, GPIO_Pin_3);\n        delay(800000);\n        GPIO_SetBits(GPIOD, GPIO_Pin_3);\n        delay(800000);\n\n        GPIO_ResetBits(GPIOD, GPIO_Pin_4);\n        delay(400000);\n        GPIO_SetBits(GPIOD, GPIO_Pin_4);\n        delay(400000);\n\n        GPIO_ResetBits(GPIOD, GPIO_Pin_7);\n        delay(200000);\n        GPIO_SetBits(GPIOD, GPIO_Pin_7);\n        delay(20000);\n    &#125;\n&#125;\n\nvoid delay(__IO uint32_t nCount)\n&#123;\n    for(; nCount !&#x3D; 0; nCount--);\n&#125;</code></pre>\n<h2 id=\"总结\">4 总结</h2>\n<p>GPIO管脚配置+软件延时实现流水灯是学习STM32过程中最基础外设，也是最重要的资源之一，需要深入的了解。本文趋向实用性，对于GPIO管脚的复用和寄存器配置未进行详细说明，请移步相关文档继续研究。</p>\n","text":"从一个月前开始学习STM32，对于MCU的理解也更加深入透彻。今天开始就陆续将自己在学习中的经历发布到这里（当然，更新随缘）。 1 流水灯实验原理 LED模块的...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"硬件","slug":"硬件","count":5,"path":"api/categories/硬件.json"}],"tags":[{"name":"STM32","slug":"STM32","count":4,"path":"api/tags/STM32.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B5%81%E6%B0%B4%E7%81%AF%E5%AE%9E%E9%AA%8C%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">1 流水灯实验原理</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AE%A1%E8%84%9A%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">2 管脚配置</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#code\"><span class=\"toc-text\">3 CODE</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">4 总结</span></a></li></ol>","author":{"name":"Leon","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/17242727?s=60&v=4","link":"/","description":"这里是爱研究各种问题、立许多flag的Leon的网络日志","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"关于Spring框架的IOC和DI的理解","uid":"6b6554949ec7891871430409cc8c842a","slug":"spring-ioc-di","date":"2018-01-26T11:05:17.000Z","updated":"2022-08-17T16:55:00.796Z","comments":true,"path":"api/articles/spring-ioc-di.json","keywords":null,"cover":null,"text":"Spring框架的详细内容就不赘述了。（也实在不是谦虚，主要是刚了解没几天，对Spring的框架完全没有概念） 下面来说说我，一个初学者，对DI的理解。 1.假...","link":"","photos":[],"count_time":{"symbolsCount":450,"symbolsTime":"1 mins."},"categories":[{"name":"杂项","slug":"杂项","count":5,"path":"api/categories/杂项.json"}],"tags":[{"name":"Spring","slug":"Spring","count":1,"path":"api/tags/Spring.json"},{"name":"前端","slug":"前端","count":1,"path":"api/tags/前端.json"}],"author":{"name":"Leon","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/17242727?s=60&v=4","link":"/","description":"这里是爱研究各种问题、立许多flag的Leon的网络日志","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Hello World","uid":"b9663f58f18133b35bfe243f3e916a80","slug":"hello-world","date":"2016-09-26T04:04:41.000Z","updated":"2022-08-17T16:54:23.677Z","comments":true,"path":"api/articles/hello-world.json","keywords":null,"cover":null,"text":"Welcome to Hexo! This is your very first post. Check documentation for more info...","link":"","photos":[],"count_time":{"symbolsCount":442,"symbolsTime":"1 mins."},"categories":[{"name":"杂项","slug":"杂项","count":5,"path":"api/categories/杂项.json"}],"tags":[],"author":{"name":"Leon","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/17242727?s=60&v=4","link":"/","description":"这里是爱研究各种问题、立许多flag的Leon的网络日志","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}